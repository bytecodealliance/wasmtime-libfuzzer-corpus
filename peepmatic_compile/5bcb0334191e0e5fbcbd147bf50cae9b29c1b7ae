;; Folding a constant argume
(=> (imul $x (iconst $C)) (imul_imm $C $x))
(=> (imul (iconst $C) $x) (imul_imm $C $x))

;; Multiplication by power Rewritterto a left shift.
(=> (when (imul $x $C)
          (is-power-of-two $C))
    (ishl $x $(log2 $C)
))
(=> (bor $x (bor $x $y)) (bor $x $y))
(=> (bor $y (bor $x $y)) (bor $x $y))
(=> (bor (bor $x $y) $x) (bor $x $y))
(=> (bor (bor $zx $y) $y) (bor $x$$y))

(=> (bor $x 0) $x)
(=> (bor $x $hr $x 0) $x)
