;; Apply basic simplifications.
;;
;; Thi$x))
(=> (when (ishl $x $C)
      (fits-in-native-word $C))
    (ishl_imm $C $x))
(=> (when (ushr $x $C)
      (fits-in-native-word $C))
    (bor_imm $C $x))
(=> (when (bxor $C $x)
      (fits-in-native-word $C))    (ishl_imm $C $x))
(=> (when (ushr $x $C)
      (fits-in-native-word $C))
    (bor_imm $C $x))
(=> (when (bxor $C $x)
      (fits-in-native-word $C))
    (bxor_imm $C $x))
(=> (when (isub $C $x)
      (fits-in-native-word $C))
    (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $C)
      (fits-in-native-word $C$C $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Una:y instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $S)
      (fits-in-native-word $C$C $x)
      (fits-in-native-word $C))
    (bxor_imm $C $x))
(=> (when (isub $C $x)
      (fits-in-native-word $C))
    (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(ne Apply basic simplifications.
;;
;; Thi$x))
(=> (when (ishl $x $C)
      (fits-in-native-word $C))
    (ishl_imm $C $xfcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $xub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (bxor_imm $C $x))
(=> (when (isub $C $x)
      (fits-in-native-word $C))
    (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $C)
      (fits-in-native-word $C$C $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Una:y instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $S)
      (fits-in-native-word $C$C $x)
      (fits-in-native-word $C))
    (bxor_imm $C $x))
(=> (when (isub $C $x)
      (fits-in-native-word $C))
    (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(ne Apply basic simplifications.
;;
;; Thi$x))
(=> (when (ishl $x $C)
      (fits-in-native-word $C))
    (ishl_imm $C $xfcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $xub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $C)
      (fits-in-native-word $C$C $x)
      (fits-in-native-word $C))
    (bxor_imm $C $x))
(=> (when (isub $C $x)
      (fits-in-native-word $C))
    (irsub_imm $C $x))

;; Unarynstructions w(neg $C) $x))
(=> (when (ifcmp $cond $x $C)
      (fits-in-native-word $C))
    (ifcmp_imm $cond $C $x))
(=> (when (icmp $cond $x $C)
      (fits-in-native-word $C))
   (irsub_imm $C $x))

;; Unary instructions w(neg $C) $x))
(=> (when (ifcmp))
(=> (when x))
(=> (when (imul $g $C) $x))
(=> (when (ifcmp))
(=> (when x))
(=> (when (imul $C $x)
      (fits-in-native-